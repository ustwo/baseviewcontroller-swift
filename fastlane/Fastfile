desc "Runs tests on the primary platforms and configurations"
lane :test do
    verify(
        scheme: "BaseViewControllerSwift iOS"
    )
    verify(
        scheme: "BaseViewControllerSwift tvOS"
    )
    verify_demo
    pod_lib_lint
end

desc "Runs unit tests"
lane :verify do |options|
    scheme = options[:scheme]
    destination = options[:destination]
    sdk = options[:sdk]
    output_directory = "fastlane/test_output/" + scheme + "/"
    opts = {
        :workspace => 'BaseViewControllerSwift.xcworkspace',
        :scheme => scheme,
        :destination => destination,
        :sdk => sdk,
        :code_coverage => true,
        :xcargs => "ONLY_ACTIVE_ARCH=YES",
        :output_directory => output_directory,
        :clean => true
    }
    scan(opts)
    upload_cov
end

desc "Build demo app"
lane :verify_demo do
    scheme = "iOS Example"
    output_directory = "fastlane/test_output/" + scheme + "/"
    xcodebuild(
        workspace: "BaseViewControllerSwift.xcworkspace",
        scheme: scheme,
        sdk: "iphonesimulator10.2",
        output_directory: output_directory,
        clean: true,
        build: true
    )
end

desc "Upload code coverage reports (if running on CI)"
lane :upload_cov do
    if is_ci?
        sh "bash ./codecov.sh"
    else
        say "No need to upload code coverage. Not running from CI."
    end
end

desc "Updates the GitHub Pages documentation"
lane :update_docs do
    jazzy
end

desc "Bumps the version number of the project and podspec"
desc "This action does the following:"
desc ""
desc "- Ensures a clean git status"
desc "- Increment the version number (Project & Podspec)"
desc "- Lints the CocoaPods Library"
desc "- Commit and push the version bump"
desc "- Creates a GitHub Release and git tag"
desc "- Lints the CocoaPods Spec"
desc ""
desc "This action does NOT do the following:"
desc ""
desc "- Add the changelog notes to the GitHub release"
desc "- Submit the updated podspec to CocoaPods"
lane :bump_version  do |options|
    version = options[:version]
    raise "You must specify a version in A.B.X format to deploy." if version.nil? || version.scan(/\d+\.\d+\.\d+/).length == 0

    ensure_git_status_clean

    version_bump_podspec(
        path: "BaseViewControllerSwift.podspec",
        version_number: version
    )
    increment_version_number_in_plist(
        version_number: version,
        xcodeproj: './BaseViewControllerSwift.xcodeproj',
        target: 'BaseViewControllerSwift iOS'
    )
    increment_version_number_in_plist(
        version_number: version,
        xcodeproj: './iOS Example.xcodeproj'
    )

    pod_lib_lint

    git_add(
        path: ['./Sources/Info.plist', './Example/Info.plist', './BaseViewControllerSwift.podspec']
    )

    commit_version_bump(
        force: true,
        xcodeproj: './BaseViewControllerSwift.xcodeproj'
    )

    push_to_git_remote

    set_github_release(
        repository_name: "ustwo/baseviewcontroller-swift",
        api_token: ENV["GITHUB_TOKEN"],
        description: 'Version Bump to ' + version,
        name: "Version " + version,
        tag_name: version
    )

    sh 'cd ../ && bundle exec pod spec lint'
end
